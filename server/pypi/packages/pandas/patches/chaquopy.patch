--- src-original/setup.py	2022-08-23 17:16:48.000000000 +0000
+++ src/setup.py	2023-09-05 08:36:00.870847761 +0000
@@ -15,6 +15,10 @@
 import sys
 from sysconfig import get_config_vars
 
+# Chaquopy: prevent the compiled parts of NumPy from being imported.
+import builtins
+builtins.__NUMPY_SETUP__ = True
+
 import numpy
 from pkg_resources import parse_version
 from setuptools import (
--- aaa/pyproject.toml	2024-10-21 14:07:02.000000000 +0000
+++ src/pyproject.toml	2024-10-22 10:54:36.432787684 +0000
@@ -2,19 +2,28 @@
 # Minimum requirements for the build system to execute.
 # See https://github.com/scipy/scipy/pull/12940 for the AIX issue.
 requires = [
-    "meson-python==0.13.1",
-    "meson==1.2.1",
+    # Chaquopy: replaced meson with setuptools, which still works for now.
+    # "meson-python==0.13.1",
+    # "meson==1.2.1",
+    "setuptools==69.0.2",
+
     "wheel",
-    "Cython>=0.29.33,<3",  # Note: sync with setup.py, environment.yml and asv.conf.json
+
+    # Chaquopy: increased Cython upper limit from 3 to 3.1, for Python 3.13 support.
+    "Cython>=0.29.33,<3.1",  # Note: sync with setup.py, environment.yml and asv.conf.json
+
     # Note: numpy 1.25 has a backwards compatible C API by default
     # we don't want to force users to compile with 1.25 though
     # (Ideally, in the future, though, oldest-supported-numpy can be dropped when our min numpy is 1.25.x)
-    "oldest-supported-numpy>=2022.8.16; python_version<'3.12'",
-    "numpy>=1.26.0,<2; python_version>='3.12'",
+    # Chaquopy: disabled numpy, since it's already listed in meta.yaml.
+    # "oldest-supported-numpy>=2022.8.16; python_version<'3.12'",
+    # "numpy>=1.26.0,<2; python_version>='3.12'",
+
     "versioneer[toml]"
 ]
 
-build-backend = "mesonpy"
+# Chaquopy
+# build-backend = "mesonpy"
 
 [project]
 name = 'pandas'
@@ -137,7 +146,12 @@
 # resulting files.
 [tool.versioneer]
 VCS = "git"
-style = "pep440"
+
+# Chaquopy: `-pre` prevents versioneer from returning a "dirty" version when we're
+# building from a git checkout. This can be reverted once we go back to building from an
+# sdist.
+style = "pep440-pre"
+
 versionfile_source = "pandas/_version.py"
 versionfile_build = "pandas/_version.py"
 tag_prefix = "v"
