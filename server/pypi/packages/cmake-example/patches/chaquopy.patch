--- a/pybind11/CMakeLists.txt
+++ b/pybind11/CMakeLists.txt
@@ -105,7 +105,7 @@ if(NOT (CMAKE_VERSION VERSION_LESS 3.0))  # CMake >= 3.0
     target_compile_options(module INTERFACE -fvisibility=hidden)
   endif()
   target_link_libraries(module INTERFACE pybind11::pybind11)
-  if(WIN32 OR CYGWIN)
+  if(WIN32 OR CYGWIN OR ANDROID)  # Chaquopy: added ANDROID
     target_link_libraries(module INTERFACE $<BUILD_INTERFACE:${PYTHON_LIBRARIES}>)
   elseif(APPLE)
     target_link_libraries(module INTERFACE "-undefined dynamic_lookup")
--- a/pybind11/tools/pybind11Config.cmake.in
+++ b/pybind11/tools/pybind11Config.cmake.in
@@ -86,7 +86,7 @@ if(NOT TARGET ${PN}::pybind11)
     find_package(PythonLibsNew ${PYBIND11_PYTHON_VERSION} MODULE REQUIRED)
     set_property(TARGET ${PN}::pybind11 APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${PYTHON_INCLUDE_DIRS})
     set_property(TARGET ${PN}::embed APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${PYTHON_LIBRARIES})
-    if(WIN32 OR CYGWIN)
+    if(WIN32 OR CYGWIN OR ANDROID)  # Chaquopy: added ANDROID
       set_property(TARGET ${PN}::module APPEND PROPERTY INTERFACE_LINK_LIBRARIES ${PYTHON_LIBRARIES})
     endif()
 
--- a/pybind11/tools/pybind11Tools.cmake
+++ b/pybind11/tools/pybind11Tools.cmake
@@ -146,8 +146,8 @@ function(pybind11_add_module target_name)
   # potential warnings or issues from having mixed hidden/non-hidden types.
   set_target_properties(${target_name} PROPERTIES CXX_VISIBILITY_PRESET "hidden")
 
-  if(WIN32 OR CYGWIN)
-    # Link against the Python shared library on Windows
+  if(WIN32 OR CYGWIN OR ANDROID)  # Chaquopy: added ANDROID
+    # Link against the Python shared library on these platforms
     target_link_libraries(${target_name} PRIVATE ${PYTHON_LIBRARIES})
   elseif(APPLE)
     # It's quite common to have multiple copies of the same Python version
